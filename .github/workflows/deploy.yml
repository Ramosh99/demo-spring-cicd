name: Deploy to GCP
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Build with Maven
      run: mvn clean package -DskipTests

    # Authenticate to Google Cloud
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
        service_account: 'github-actions-sa@agile-sprite-441808-a6.iam.gserviceaccount.com'
        project_id: '${{ secrets.GCP_PROJECT_ID }}'
        
    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        project_id: '${{ secrets.GCP_PROJECT_ID }}'
        install_components: 'beta,docker-credential-gcr'
        
    # Configure Docker
    - name: Configure Docker
      run: |
        gcloud auth configure-docker gcr.io --quiet
        
    - name: Build & Push Docker image
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        echo "Building image for project: $GCP_PROJECT_ID"
        docker build -t "gcr.io/$GCP_PROJECT_ID/spring-app:$IMAGE_TAG" .
        echo "Pushing image to GCR..."
        gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin gcr.io
        docker push "gcr.io/$GCP_PROJECT_ID/spring-app:$IMAGE_TAG"
        
    - name: Deploy to Compute Engine
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        gcloud config set project $GCP_PROJECT_ID
        gcloud compute instances create-with-container spring-instance-$IMAGE_TAG \
          --container-image "gcr.io/$GCP_PROJECT_ID/spring-app:$IMAGE_TAG" \
          --machine-type=e2-medium \
          --tags=http-server \
          --zone=${{ secrets.GCP_REGION }}